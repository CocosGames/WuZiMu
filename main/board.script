local blocksize = 39		-- Distance between block centers
local edge = 47				-- Left and right edge.
local bottom_edge = 47		-- Bottom edge.
local boardwidth = 19		-- Number of columns
local boardheight = 19		-- Number of rows

function init(self)
	msg.post("#label", "disable")
	msg.post(".", "acquire_input_focus")
	setup_board(self);
end

function setup_board(self)
	self.board = {}
end

function on_message(self, message_id, message, sender)
	if message_id == hash("build") then
		setup_board(self)
	elseif message_id == hash("set") then
		set_board(self, message.value, message.index)
	elseif message_id == hash("tip") then
		local turn = "YOUR TURN!";
		if message.tip then
			turn = "YOUR TURN!"
		else
			turn = "OPPONENT'S TURN!"
		end
		label_animate(turn)
	elseif message_id == hash("draw") then
		print("DRAW!")
	elseif message_id == hash("winner") then
		if message.win then
			print("WIN!")
			label_animate("WIN")
		else
			print("LOSE!")
			label_animate("LOSE")
		end
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") then
		local x = math.floor((action.x - edge) / blocksize +0.5)
		local y = math.floor((action.y - bottom_edge) / blocksize +0.5)
		if x<0 or x>=boardwidth or y<0 or y>=boardheight then
			return
		end
		local index = (boardheight - y -1) * boardwidth + x
		if self.board[index] ~=1 and self.board[index]~=2 then
			msg.post("#client", "action", {index=index})
		end
	end
end

--  ...
-- (0,2) (1,2) (2,2)
-- (0,1) (1,1) (2,1)
-- (0,0) (1,0) (2,0) ...
--
-- value: empty=0 white=1 black=2
--
function set_board(self, value, index)
	local c;
	if value==1 then
		c = "white"
	elseif value==2 then
		c = "black"
	else
		return
	end
	local pos = vmath.vector3();
	local x = index % boardwidth
	local y = boardheight - math.floor(index / boardheight) -1
	pos.x = blocksize*x+edge
	pos.y = blocksize*y+bottom_edge
	factory.create("#piece_factory", pos, null, {color =  hash(c)})
	self.board[index] = value
end


function label_animate(text)
	label.set_text("#label", text)
	msg.post("#label", "enable")
	go.animate("#label", "scale", 1, vmath.vector3(5,5,1), go.EASING_LINEAR, 2, 0, function()
		msg.post("#label", "disable")
		go.set("#label", "scale", vmath.vector3(1,1,1));
	end)
end
